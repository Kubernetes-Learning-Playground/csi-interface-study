kind: Deployment
apiVersion: apps/v1
metadata:
  name: mycsi
  namespace: mycsi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mycsi-driver
  template:
    metadata:
      labels:
        app: mycsi-driver
    spec:
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: vm-0-12-centos  # 指定 node
      nodeName: vm-0-12-centos                  # 指定 node
      serviceAccount: mycsi-sa
      containers:
        - name: mycsi-driver
          image: mycsi:v1
          imagePullPolicy: "IfNotPresent"
          workingDir: "/app"
          args:
            - --nodeid=$(KUBE_NODE_NAME)
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
            capabilities:
              add: [ "SYS_ADMIN" ]
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: socket-dir
              mountPath: /csi
        # k8s api跟csi driver的桥梁：External 组件
        # node-driver-registrar
        # CSI node-driver-registrar是一个sidecar容器，
        # 可从CSI driver获取驱动程序信息（使用NodeGetInfo），并使用kubelet插件注册机制在该节点上的kubelet中对其进行注册。
        - name: node-driver-registrar
          # 使用 hub.docker.com  原有地址 需要科学
          image: projectaccuknox/node-driver-registrar:v2.5.1-eks-1-24-2
          imagePullPolicy: "IfNotPresent"
          args:
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=2
          env:
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/mycsi/csi.sock
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        # livenessprobe
        # 它是一个sidecar容器，用于监视CSI驱动程序的运行状况，
        # 并通过Liveness Probe机制将其报告给Kubernetes。
        # 这使Kubernetes能够自动检测驱动程序问题并重新启动Pod以尝试解决问题。
        - name: liveness-probe
          image: projectaccuknox/livenessprobe:v2.7.0-eks-1-24-2
          imagePullPolicy: "IfNotPresent"
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=3s
            - --health-port=29655
            - --v=2
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        # csi-provisioner
        # 它是一个sidecar容器，用于监视Kubernetes PersistentVolumeClaim对象并针对驱动程序端点触发CSI CreateVolume和DeleteVolume操作。
        # 如果将快照CRD资源指定为PVC对象上的数据源，则此sidecar容器通过获取SnapshotContent对象获取有关快照的信息，
        # 并填充数据源字段，该字段向存储系统指示应使用指定的快照填充新卷 。
        - name: csi-provisioner
          image: projectaccuknox/external-provisioner:v3.3.0-eks-1-24-2
          args:
            - "--v=2"
            - "--csi-address=$(ADDRESS)"
            - "--leader-election"
            - "--leader-election-namespace=kube-system"
            - "--extra-create-metadata=true"
          env:
            - name: ADDRESS
              value: unix:///csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        # csi-attacher
        # external-attacher还支持快照数据源。
        # 它是一个sidecar容器，用于监视Kubernetes VolumeAttachment对象，
        # 并针对驱动程序端点触发CSI ControllerPublish和ControllerUnpublish操作。
        - name: csi-attacher
          image: longhornio/csi-attacher:v3.4.0
          args:
            - "--v=2"
            - "--csi-address=/csi/csi.sock"
          env:
            - name: ADDRESS
              value: /csi/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      volumes:
        # 本机上 kubelet 目录
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/mycsi/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
